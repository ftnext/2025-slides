Chapter 4: 伸びしろのあるロギング実装と、対処術
======================================================================

📣「ライブラリユーザにこんなハックが必要ないように、ロギングを実装してくださいね」

事例1：``print`` するものはロギングではありません
======================================================================

色付きでストリームに出力するロガーの実装

.. code-block:: python
    :caption: `crawl4ai v0.4.24 <https://github.com/unclecode/crawl4ai/blob/v0.4.24/crawl4ai/async_logger.py#L147>`__

    class AsyncLogger:
        def _log(
            self,
            level: LogLevel,
            message: str,
        ):
            if self.verbose or kwargs.get("force_verbose", False):
                print(log_line)

.. https://nikkie-ftnext.hatenablog.com/entry/use-logger-instead-of-print-in-python-libraries

ログにはprintでなくloggerを使う
--------------------------------------------------

『`自走プログラマー`_』 `72:ログにはprintでなくloggerを使う <https://jisou-programmer.beproud.jp/%E3%83%AD%E3%82%AE%E3%83%B3%E3%82%B0/72-%E3%83%AD%E3%82%B0%E3%81%AB%E3%81%AFprint%E3%81%A7%E3%81%AA%E3%81%8Flogger%E3%82%92%E4%BD%BF%E3%81%86.html>`__

    ロギングを使えば、表示をやめたり、ファイルに出力したり、ログを残した日時を残したりできます。

print と logger [#when-to-use-logging]_
--------------------------------------------------

.. [#when-to-use-logging] `logging を使うとき（基本 logging チュートリアル） <https://docs.python.org/ja/3/howto/logging.html#when-to-use-logging>`__

.. list-table::

    * - タスク
      - 最適なツール
    * - コマンドラインスクリプトやプログラムで普通に使う、コンソール出力の表示
      - ``print()``
    * - プログラムの通常の操作中に発生したイベントの報告
      - ``logger.info()`` （や ``logger.debug()``）

``logger.info("メッセージ")`` は ``print`` と違って
------------------------------------------------------------

* **ロガーのレベル** の指定で、出力なしにできる
* **ハンドラ** を変えて、ファイルに出力できる
* ログレコードの **asctime属性** で日時を記録できる（フォーマッタ）

色付きロギングの選択肢
--------------------------------------------------

.. TODO もうちょい膨らませられそう

* richの ``RichHandler``
* レベルに色が付く uvicorn のロギング（`自作Formatter <https://github.com/Kludex/uvicorn/blob/0.37.0/uvicorn/logging.py#L14-L65>`__）にならう

事例2： **ライブラリで** ルートロガーを触ってはいけません
======================================================================

DON'T🙅‍♂️ ライブラリで ``basicConfig()``

``basicConfig()`` のヒミツ
----------------------------------------------------------------------

    (略) ルートロガーに設定されたハンドラがあれば何もしません。

`logging.basicConfig()`_

実験スクリプト
--------------------------------------------------

.. code-block:: python

    import logging

    logging.basicConfig(level=logging.INFO)
    logging.info("想定通り")
    logging.warning("ちょっとヤバいよ")

    logging.basicConfig(level=logging.WARNING)  # 効きません
    logging.info("想定通り")
    logging.warning("ちょっとヤバいよ")

ルートロガーを設定するのは「一度だけ」
--------------------------------------------------

.. code-block:: python
    :caption: https://github.com/python/cpython/blob/v3.13.7/Lib/logging/__init__.py#L2082

    def basicConfig(**kwargs):

        if len(root.handlers) == 0:
            ...

ライブラリがルートロガーにハンドラを設定してしまうと、 **アプリケーションコードで呼び出しても何も起こらない** 😭

``logging.warning()`` なども全部 ``basicConfig()`` を呼んでます
----------------------------------------------------------------------

    （補足：ルートロガーがハンドラを持たない場合は）ルートロガーの ``debug`` メソッドを呼び出す前に ``basicConfig()`` が呼ばれます。

`logging.debug() <https://docs.python.org/ja/3/library/logging.html#logging.debug>`__

``basicConfig()`` 同様にライブラリで使ってはいけません
------------------------------------------------------------

.. code-block:: python
    :caption: `logging.debug() の実装 <https://github.com/python/cpython/blob/v3.13.7/Lib/logging/__init__.py#L2198>`__

    def debug(msg, *args, **kwargs):
        if len(root.handlers) == 0:
            basicConfig()
        root.debug(msg, *args, **kwargs)

あのGoogleのライブラリでもやってる😭
--------------------------------------------------

* `google-genai <https://github.com/googleapis/python-genai>`__ （`修正済み <https://github.com/googleapis/python-genai/issues/278>`__）
* `google-adk <https://github.com/google/adk-python>`__

.. https://nikkie-ftnext.hatenablog.com/entry/google-genai-fixed-issue-call-logging-info-not-logger-info

.. https://nikkie-ftnext.hatenablog.com/entry/google-adk-python-cli-debug-logging-noisy-and-workaround

workaround: ``basicConfig()`` の ``force`` 引数
------------------------------------------------------------

.. code-block:: python
    :emphasize-lines: 7

    import logging

    logging.basicConfig(level=logging.INFO)
    logging.info("想定通り")
    logging.warning("ちょっとヤバいよ")

    logging.basicConfig(level=logging.WARNING, force=True)
    logging.info("想定通り")
    logging.warning("ちょっとヤバいよ")

.. forceで解呪 https://nikkie-ftnext.hatenablog.com/entry/python-logging-basicconfig-configure-root-logger-without-handler
    直接ルートロガーのハンドラを修正する例？

📣 **ライブラリではルートロガーは触らない**
--------------------------------------------------

    あなたのライブラリから *ルートロガーへ直接ログを記録しない* ことを強く推奨します。

`ライブラリのためのロギングの設定 <https://docs.python.org/ja/3/howto/logging.html#configuring-logging-for-a-library>`__ の注釈
